# (c) GeoCat B.V. and others
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config


# -- setup --------------------------------------------------------------------

import datetime
import os
import warnings

# ignore warning from docutils code
# https://github.com/sphinx-contrib/confluencebuilder/pull/289
warnings.filterwarnings("ignore", category=FutureWarning) 

# -- Build properties --------------------------------------------------------

build_dir = os.path.sep.join(os.getcwd().split(os.path.sep)[:-2])
properties_file = os.path.join(build_dir,'build.properties')

build_properties = dict()
with open(properties_file, 'r') as file:
    for line in file:
        key = line.split('=')[0]
        value = line.split('=')[1].strip('\n')
        build_properties[key] = value

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# -- Project information -----------------------------------------------------

now = datetime.datetime.now()
year = now.year

project = build_properties['project']
copyright = u'{}, GeoCat BV'.format(year)
author = build_properties['author']

# The short X.Y version.
version = now.strftime('%Y.%m')

# The full version, including alpha/beta/rc tags.
release = now.strftime('%Y.%m.%d')


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '3.2.1'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
  'sphinx.ext.todo',
  'sphinx.ext.ifconfig',
  'sphinx.ext.extlinks',
  'hieroglyph',
  'sphinx_copybutton'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = [
  os.path.join(build_dir,build_properties['theme_path'])
]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
source_encoding = 'utf-8'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['Thumbs.db', '.DS_Store']

# highlight language pygments lexer name (defaults to 'default' tries python3 and falls back to none)
highlight_language = 'none'

# options for pygments lexer
highlight_options = {
   'tabsize': 2
}

# The name of the Pygments (syntax highlighting) style to use, or None for theme.conf default
pygments_style = None

# Disable smart quotes as they cause issues with code examples
smartquotes = False

# -- Extension External Links ------------------------------------------------
if 'host' in build_properties :
   host = build_properties['host']
else:
   host = 'http://localhost:8080/'

extlinks = {
    'host': (host+'/%s',host),
    'geoserver': ('http://docs.geoserver.org/latest/en/user/%s',''),
    'sphinx': ('https://www.sphinx-doc.org/en/master/%s','')
}

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'geocat_rtd'

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = [
  os.path.join(build_dir,build_properties['theme_path'])
]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'logo_only': True,
    'display_version': False,
    'prev_next_buttons_location': 'bottom',
    'show_sphinx': False,
    'show_home': False,
    'is_prerelease': True
}

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = 'geocat_product_logos.svg'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = 'favicon.ico'

html_show_sourcelink = False

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'GeoCatThemeExampledoc'

# -- Options for Hieroglyph output ---------------------------------------------

slide_title = project

autoslides = True
slide_theme = 'geocat_slides'
subtitle = build_properties['subtitle']
slide_footer = 'GeoCat '+version
slide_levels = 4
slide_numbers = True

# requires html and slides build
slide_link_to_html = True
slide_link_html_to_slides = True
slide_link_html_sections_to_slides = True
slide_relative_path = '_slides/'
slide_html_relative_path = '../' 
slide_html_slide_link_symbol = 'ยง'

# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'GeoCatThemeExample.tex', 'GeoCat Theme Example',
     'GeoCat BV', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'example', 'GeoCat Theme Example',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'GeoServerEnterprise', 'GeoServer Enterprise Documentation',
     author, 'GeoServerEnterprise', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']
